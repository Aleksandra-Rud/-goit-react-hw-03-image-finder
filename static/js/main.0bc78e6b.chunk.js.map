{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Loader/Loader.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","services/apiService.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","state","query","handleChangeQuery","e","currentTarget","name","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","this","type","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","image","onOpenModal","console","log","src","webformatURL","alt","onClick","largeImageURL","ImageGallery","images","map","id","Loader","color","height","width","timeout","Button","modalRoot","document","querySelector","Modal","handleKeyDown","code","handleBackdropClick","event","target","window","addEventListener","removeEventListener","createPortal","children","axios","defaults","baseURL","getPictures","page","get","then","resp","data","hits","App","showModal","largeImage","error","handleSearchBarSubmit","addPicture","isLoasing","response","prevState","catch","finally","isLoading","toggleModal","dataset","img","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0bc78e6b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    query: \"\",\r\n  };\r\n\r\n  handleChangeQuery = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({\r\n      query: \"\",\r\n    });\r\n\r\n    this.props.reset();\r\n  };\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n          <input\r\n            onChange={this.handleChangeQuery}\r\n            value={this.state.query}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            name=\"query\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ImageGalleryItem({ image, onOpenModal }) {\r\n  console.log(image);\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={image.webformatURL}\r\n        alt=\"\"\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={onOpenModal}\r\n        data-img={image.largeImageURL}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  image: PropTypes.object.isRequired,\r\n  onOpenModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"./ImageGalleryItem\";\r\n\r\nfunction ImageGallery({ images, onOpenModal }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map((image) => (\r\n        <ImageGalleryItem\r\n          image={image}\r\n          key={image.id}\r\n          onOpenModal={onOpenModal}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  onOpenModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import NewLoader from \"react-loader-spinner\";\r\n\r\nfunction Loader() {\r\n  return (\r\n    <NewLoader\r\n      type=\"Puff\"\r\n      color=\"#00BFFF\"\r\n      height={100}\r\n      width={100}\r\n      timeout={3000} //3 secs\r\n    />\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import PropTypes from \"prop-types\";\r\n\r\nfunction Button({ onClick }) {\r\n  return (\r\n    <>\r\n      <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n        Load more\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClick();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClick();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://pixabay.com/api/\";\n\nconst API_KEY = \"23017101-47ea80d7a3291cc2e4e342e52\";\n\nexport function getPictures(query, page) {\n  return axios\n    .get(\n      `/?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=12&key=${API_KEY}`\n    )\n    .then((resp) => resp.data.hits);\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Loader from \"./components/Loader/Loader\";\nimport Button from \"./components/Button/Button\";\nimport Modal from \"./components/Modal/Modal\";\nimport { getPictures } from \"./services/apiService\";\n\nclass App extends Component {\n  state = {\n    query: \"\",\n    page: 1,\n    images: [],\n    // filter: \"\",\n    showModal: false,\n    largeImage: \"\",\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevSearchQuery = prevState.query;\n    const nextSearchQuery = this.state.query;\n    if (prevSearchQuery !== nextSearchQuery) {\n      this.addPicture();\n    }\n\n    if (prevState.page !== this.state.page && this.state.page !== 2) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }\n  }\n\n  handleSearchBarSubmit = (query) => {\n    this.setState({\n      query: query,\n      // page: 1,\n      // images: [],\n    });\n  };\n\n  addPicture = () => {\n    const { query, page } = this.state;\n\n    this.setState({\n      isLoasing: true,\n    });\n\n    getPictures(query, page)\n      .then((response) =>\n        this.setState((prevState) => ({\n          images: [...prevState.images, ...response],\n          page: prevState + 1,\n        }))\n      )\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  reset = () => {\n    this.setState({\n      images: [],\n      page: 1,\n    });\n  };\n\n  toggleModal = () => {\n    this.setState((prevState) => ({\n      showModal: !prevState.showModal,\n    }));\n  };\n\n  onOpenModal = (e) => {\n    e.preventDefault();\n    this.setState({\n      largeImage: e.target.dataset.img,\n    });\n    this.toggleModal();\n  };\n\n  render() {\n    const { images, largeImage, isLoading, showModal } = this.state;\n    return (\n      <div>\n        <Searchbar onSubmit={this.handleSearchBarSubmit} reset={this.reset} />\n        {isLoading && <Loader />}\n        <ImageGallery images={images} onOpenModal={this.onOpenModal} />\n        {images.length > 0 && <Button onClick={this.addPicture} />}\n        {showModal && (\n          <Modal onClick={this.toggleModal}>\n            <img src={largeImage} alt=\"\" />\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}